@using Blogzaur.Application.Comment.Commands.CreateComment
@model Blogzaur.Application.BlogEntry.BlogEntryDto

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>BlogEntryDto</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Content)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Content)
        </dd>
    </dl>
</div>

<div>
    <h3>Add a comment:</h3>
    <partial name="_CreateComment" model="new CreateCommentCommand() {BlogEntryId = Model.Id}" />
    @if(Model.isEditable)
    {
        <a class="btn btn-outline-secondary" asp-controller="BlogEntry" asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
    }

    <h3>Comments:</h3>

    <div id="comments" class="row" data-blog-id="@Model.Id"></div>

    <a asp-controller="BlogEntry" asp-action="List">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="~/js/BlogEntry/Details.js"></script>
}
